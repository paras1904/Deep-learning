# -*- coding: utf-8 -*-
"""Anomly Detection Autoencoder.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R6nwXxI_Njg8aaMPn_zxX6k32KRXv5qH

Data link -> https://raw.githubusercontent.com/bnsreenu/python_for_microscopists/master/other_files/anomaly.csv
"""

import pandas as pd
import numpy as np

df = pd.read_csv('/anomaly.csv')

df.drop(['Date'],axis = 1,inplace=True)

df.dropna(inplace = True,axis = 1)

df.groupby('Quality')['Quality'].count()

df.Quality[df.Quality =='Good'] = 1
df.Quality[df.Quality == 'Bad'] = 2

good_mask = df['Quality'] == 1
bad_mask = df['Quality'] == 2

df.drop('Quality',axis=1,inplace=True)

df_good = df[good_mask]

df_bad = df[bad_mask]

x_good = df_good.values
x_bad = df_bad.values

from sklearn.model_selection import train_test_split
x_good_train, x_good_test = train_test_split(x_good,random_state = 42,test_size = 0.3)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense


model  = Sequential([
                     Dense(10,input_dim = x_good.shape[1],activation = 'relu'),
                     Dense(3,activation='relu'),
                     Dense(10,activation = 'relu'),
                     Dense(x_good.shape[1])
])

model.compile(optimizer='adam',loss = 'mean_squared_error')

model.fit(x_good_train,x_good_train,verbose=1,epochs=100)

pred = model.predict(x_good_test)
score1 = np.sqrt(metrics.mean_squared_error(pred,x_good_test))
score1

pred = model.predict(x_bad)
score3 = np.sqrt(metrics.mean_squared_error(pred,x_bad))
score3

